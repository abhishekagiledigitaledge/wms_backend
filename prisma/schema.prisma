generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Order {
  id                Int       @id @default(autoincrement())
  externalId        String    @unique
  source            String
  orderNumber       String
  customerName      String?
  customerEmail     String?
  customerPhone     String?
  customerAddress   String?
  status            String
  paymentStatus     String?
  fulfillmentStatus String?
  outlet            String?
  subtotal          Float?
  tax               Float?
  shippingFee       Float?
  discount          Float?
  totalAmount       Float
  currency          String
  createdAt         DateTime
  updatedAt         DateTime
  fulfilledAt       DateTime?
  extraData         Json?

  @@map("orders")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      Role     @default(SALESPERSON)
  is_active Boolean  @default(true)
  scopes    String[] @default([])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String?

  @@map("users")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  SALESPERSON
}

model Store {
  id            Int             @id @default(autoincrement())
  name          String
  address       String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  storeProducts StoreProduct[]

  @@map("stores")

}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  sku           String?         @unique
  description   String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  storeProducts StoreProduct[]

  @@map("products")

}

model StoreProduct {
  id         Int      @id @default(autoincrement())
  storeId    Int
  productId  Int
  price      Float
  minQty     Int      @default(1)
  maxQty     Int?
  stock      Int      @default(0)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  store      Store    @relation(fields: [storeId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@map("storeProducts")

  @@unique([storeId, productId]) // same product same store me duplicate entry prevent
}

model PushSubscription {
  id           Int    @id @default(autoincrement())
  storeId      Int
  subscription Json
  createdAt    DateTime @default(now())
}